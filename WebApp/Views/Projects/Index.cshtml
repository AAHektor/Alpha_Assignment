@using Presentation.Models
@model ProjectsViewModel
@using System.Linq

@{
    ViewData["Title"] = "Projects";
}

<main>
    <div id="projects" class="page">
        <div class="page-header">
            <h1>Projects</h1>

            <button class="btn-blue btn-projects" id="add-project" data-type="modal" data-target="#add-project-modal">
                <i class="fa-solid fa-plus"></i>
                <span>Add Project</span>
            </button>
        </div>
        <div class="project-filter">
            <ul class="filter-tabs">
                <li>
                    <button class="filter-btn active" data-status="all">
                        <span>ALL [@Model.AllCount]</span>
                    </button>
                </li>
                <li>
                    <button class="filter-btn" data-status="1">
                        <span>STARTED [@Model.StartedCount]</span>
                    </button>
                </li>
                <li>
                    <button class="filter-btn" data-status="2">
                        <span>COMPLETED [@Model.CompletedCount]</span>
                    </button>
                </li>
            </ul>
        </div>

        <section class="project-list">
            @if(Model.Projects != null && Model.Projects.Any())
            {
                @foreach (var project in Model.Projects)
                {
                    @await Html.PartialAsync("ListItems/_ProjectListItemPartial", project)
                }
            }

        </section>

    </div>
</main>

@await Html.PartialAsync("Modals/_AddProjectModalPartial", Model.AddProjectFormData)
@await Html.PartialAsync("Modals/_EditProjectModalPartial", Model.EditProjectFormData)
